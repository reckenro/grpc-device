//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for IO-TRACE
//---------------------------------------------------------------------
#ifndef IOTRACE_GRPC_LIBRARY_H
#define IOTRACE_GRPC_LIBRARY_H

#include "iotrace_library_interface.h"

#include <server/shared_library.h>

namespace iotrace_grpc {

class IOTraceLibrary : public iotrace_grpc::IOTraceLibraryInterface {
 public:
  IOTraceLibrary();
  virtual ~IOTraceLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  int32_t StartTracing(eNiSpyLogFileSetting logFileSetting, const char filePathString[], eNiSpyAPIFileWriteMode fileWriteMode);

 private:
  using StartTracingPtr = decltype(&nispy_StartSpying);

  typedef struct FunctionPointers {
    StartTracingPtr StartTracing;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace iotrace_grpc

#endif  // IOTRACE_GRPC_LIBRARY_H
