//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-IOTRACE
//---------------------------------------------------------------------
#ifndef NIIOTRACE_GRPC_LIBRARY_H
#define NIIOTRACE_GRPC_LIBRARY_H

#include "niiotrace_library_interface.h"

#include <server/shared_library.h>

namespace niiotrace_grpc {

class NiIOTraceLibrary : public niiotrace_grpc::NiIOTraceLibraryInterface {
 public:
  NiIOTraceLibrary();
  virtual ~NiIOTraceLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  int32_t StartTracing(int32_t logFileSetting, const char filePathString[], int32_t fileWriteMode);

 private:
  using StartTracingPtr = decltype(&nispy_StartSpying);

  typedef struct FunctionPointers {
    StartTracingPtr StartTracing;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace niiotrace_grpc

#endif  // NIIOTRACE_GRPC_LIBRARY_H
